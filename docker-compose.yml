version: "3.8"

services:
  api:
    container_name: api
    build: .
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      - db
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      API_DOMAIN: ${API_DOMAIN}
      API_DEBUG: ${API_DEBUG}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}

    volumes:
      - ./logs:/MoneyTracker/logs

  adminer:
    image: michalhosna/adminer
    container_name: adminer
    ports:
      - "8081:8080"
    depends_on:
      - db
    environment:
      ADMINER_DB: ${POSTGRES_DATABASE}
      ADMINER_DRIVER: pgsql
      ADMINER_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      ADMINER_SERVER: db
      ADMINER_USERNAME: ${POSTGRES_USER}
      ADMINER_AUTOLOGIN: 1
      ADMINER_NAME: MoneyTracker

  db:
    container_name: db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped


